.popup {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100%;
  background-color: rgba($color-black, .8);
  z-index: 10000;
  opacity: 0;
  visibility: hidden;
  transition: all .3s;

  
  &__content {
    @include absCenter;
    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, .2);
    border-radius: 3px;
    display: table; // will function as a table to allow children elements displayed as table-cells to have same height
    overflow: hidden; // hide corners of images
    opacity: 0;
    transform: translate(-50%, -50%) scale(.25); // we need to include translate() again because a declaration can only have one transform property
    transition: all .4s .2s;

    @include respond(tab-port) {
      width: 85%;
    }
  }
  
  &__left {
    width: 33.333333%;
    display: table-cell;

    @include respond(tab-port) {
      display: block;
      width: 100%;
      @include clearfix;
    }
  }
  
  &__right {
    width: 66.666666%;
    display: table-cell;
    vertical-align: middle; // we can use this since displayed as a table-cell
    padding: 3rem 5rem;

    @include respond(tab-land) {
      padding: .5rem 1rem;
    }

    @include respond(tab-port) {
      width: 100%;
      display: block;
      padding: 4rem 3rem;
    }
  }
  
  &__img {
    width: 100%;
    display: block;

    @include respond(tab-port) {
      float: left;
      width: 50%;
    }

    &:nth-child(2) {
      @include respond(tab-port) {
        position: relative;
        top: -7px;
      }
    }
  }
  
  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    column-count: 2;   
    column-gap: 4rem;  // space between columns
    column-rule: 1px solid $color-grey-light-2;
    hyphens: auto; // automatically hyphenate words (html lang must be specified to work)

    @include respond(tab-land) {
      margin-bottom: 1rem;
      column-count: 1;
    }

    @include respond(tab-port) {
      margin-bottom: 2.5rem;
    }
  }

  &:target {   // applies to the element when accessed through an anchor
    opacity: 1;
    visibility: visible;
  }

  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  
  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      line-height: 1;
      transition: all .2s;
    }
  
    &:hover {
      color: $color-primary;
    }
  }
}